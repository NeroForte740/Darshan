Vamos ajustar o código para incluir campos que permitem adicionar informações tanto sobre os registros principais quanto sobre os projetos associados. Dessa forma, ao adicionar um registro, você também poderá preencher informações sobre projetos diretamente no formulário.

Exemplo Completo com Campos de Projetos
Aqui está o código atualizado:

html
Copiar código
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registros com Informações e Projetos</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f8f9fa;
            display: flex;
        }
        .form-container, .table-container, .info-container {
            margin-bottom: 20px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            flex: 1;
            margin-right: 20px;
        }
        .info-container {
            margin-right: 0;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #007bff;
            color: white;
        }
        button {
            margin-top: 10px;
            padding: 10px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .project-input {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<div class="form-container">
    <h2>Adicionar Registro</h2>
    <form id="dataForm">
        <label for="name">Nome:</label>
        <input type="text" id="name" required>
        <br><br>
        <label for="age">Idade:</label>
        <input type="number" id="age" required>
        <br><br>
        <label for="email">Email:</label>
        <input type="email" id="email" required>
        <br><br>
        <h3>Projetos</h3>
        <div class="project-input">
            <label for="projectName">Nome do Projeto:</label>
            <input type="text" id="projectName" required>
        </div>
        <div class="project-input">
            <label for="projectStatus">Status do Projeto:</label>
            <input type="text" id="projectStatus" required>
        </div>
        <button type="submit">Adicionar</button>
    </form>
</div>

<div class="table-container">
    <h2>Tabela de Registros</h2>
    <table id="recordsTable">
        <tr>
            <th>Nome</th>
            <th>Idade</th>
            <th>Email</th>
        </tr>
    </table>
</div>

<div class="info-container">
    <h3>Detalhes</h3>
    <table id="infoTable">
        <tr>
            <th>Informação</th>
            <th>Valor</th>
        </tr>
        <tr>
            <td colspan="2" id="noData">Selecione um registro para ver os detalhes.</td>
        </tr>
    </table>

    <h3>Projetos/Atividades</h3>
    <table id="projectsTable">
        <tr>
            <th>Projeto</th>
            <th>Status</th>
        </tr>
        <tr>
            <td colspan="2" id="noProjects">Selecione um registro para ver os projetos.</td>
        </tr>
    </table>
</div>

<script>
    const form = document.getElementById('dataForm');
    const recordsTable = document.getElementById('recordsTable');
    const infoTable = document.getElementById('infoTable');
    const noData = document.getElementById('noData');
    const projectsTable = document.getElementById('projectsTable');
    const noProjects = document.getElementById('noProjects');

    // Dados de exemplo para a tabela de informações
    const infoData = {};

    form.addEventListener('submit', function(event) {
        event.preventDefault(); // Evita o envio padrão do formulário

        // Coleta os dados do formulário
        const name = document.getElementById('name').value;
        const age = document.getElementById('age').value;
        const email = document.getElementById('email').value;
        const projectName = document.getElementById('projectName').value;
        const projectStatus = document.getElementById('projectStatus').value;

        // Cria uma nova linha na tabela
        const newRow = recordsTable.insertRow();

        // Insere células na nova linha
        const cellName = newRow.insertCell(0);
        const cellAge = newRow.insertCell(1);
        const cellEmail = newRow.insertCell(2);

        // Adiciona os dados coletados às células
        cellName.textContent = name;
        cellAge.textContent = age;
        cellEmail.textContent = email;

        // Adiciona dados à infoData
        const id = recordsTable.rows.length - 1; // Usando o índice da linha como ID
        infoData[id] = {
            email: email,
            idade: age,
            projetos: [
                { nome: projectName, status: projectStatus }
            ]
        };

        // Adiciona um evento de clique na nova linha
        newRow.addEventListener('click', () => {
            // Limpa a tabela de informações
            infoTable.innerHTML = `
                <tr>
                    <th>Informação</th>
                    <th>Valor</th>
                </tr>
            `;
            noData.style.display = 'none'; // Esconde mensagem de "sem dados"

            // Preenche a tabela de informações
            const info = infoData[id];
            const newRowEmail = document.createElement('tr');
            newRowEmail.innerHTML = `<td>Email</td><td>${info.email}</td>`;
            infoTable.appendChild(newRowEmail);

            const newRowIdade = document.createElement('tr');
            newRowIdade.innerHTML = `<td>Idade</td><td>${info.idade}</td>`;
            infoTable.appendChild(newRowIdade);

            // Limpa a tabela de projetos
            projectsTable.innerHTML = `
                <tr>
                    <th>Projeto</th>
                    <th>Status</th>
                </tr>
            `;
            noProjects.style.display = 'none'; // Esconde mensagem de "sem projetos"

            // Preenche a tabela de projetos
            info.projetos.forEach(projeto => {
                const newRowProjeto = document.createElement('tr');
                newRowProjeto.innerHTML = `<td>${projeto.nome}</td><td>${projeto.status}</td>`;
                projectsTable.appendChild(newRowProjeto);
            });

            // Se não houver projetos, exibe mensagem
            if (info.projetos.length === 0) {
                noProjects.style.display = '';
            }
        });

        // Limpa os campos do formulário
        form.reset();
    });
</script>

</body>
</html>
Explicação das Novas Funcionalidades
Novos Campos no Formulário:

O formulário agora inclui campos para adicionar o nome e o status de um projeto, além de Nome, Idade e Email.
Adicionando Projetos:

Quando um novo registro é adicionado, o projeto também é incluído nas informações armazenadas no objeto infoData.
A tabela de projetos é preenchida automaticamente com o projeto associado ao registro.
Interatividade:

O usuário pode clicar em qualquer linha da tabela de registros para visualizar os detalhes e o projeto associado.