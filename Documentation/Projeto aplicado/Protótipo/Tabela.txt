Para exibir informações dos itens em outra linha ou selecionar dados de um banco de dados, você pode seguir duas abordagens:

Exibir Informações em Outra Linha: Você pode modificar a tabela para incluir uma linha adicional que aparece ao clicar na linha principal.

Obter Dados de um Banco de Dados: Para isso, você normalmente usaria uma linguagem de servidor (como PHP, Node.js, etc.) para buscar dados de um banco de dados e depois renderizá-los no HTML.

Vou mostrar como implementar ambas as abordagens.

1. Exibir Informações em Outra Linha
Aqui está um exemplo simples que adiciona uma linha oculta que aparece ao clicar na linha principal:

html
Copiar código
<div class="table-container" style="max-height: 200px; overflow-y: auto; border: 1px solid #ddd; margin-bottom: 20px;">
    <table id="myTable">
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Idade</th>
        </tr>
        <tr data-info="Informações sobre o item 1.">
            <td>1</td>
            <td>João</td>
            <td>30</td>
        </tr>
        <tr class="info-row" style="display:none;">
            <td colspan="3">Mais detalhes sobre João.</td>
        </tr>
        <tr data-info="Informações sobre o item 2.">
            <td>2</td>
            <td>Maria</td>
            <td>25</td>
        </tr>
        <tr class="info-row" style="display:none;">
            <td colspan="3">Mais detalhes sobre Maria.</td>
        </tr>
        <!-- Adicione mais linhas conforme necessário -->
    </table>
</div>

<script>
    const rows = document.querySelectorAll('#myTable tr[data-info]');
    
    rows.forEach(row => {
        row.addEventListener('click', () => {
            const nextRow = row.nextElementSibling;
            nextRow.style.display = nextRow.style.display === 'none' ? 'table-row' : 'none';
        });
    });
</script>
2. Obter Dados de um Banco de Dados
Para buscar dados de um banco de dados, você geralmente fará uma solicitação para uma API ou um endpoint do servidor. Vou usar PHP como exemplo, mas a lógica é similar para outras linguagens.

Exemplo Simples com PHP e MySQL
Configuração do Banco de Dados: Tenha um banco de dados MySQL com uma tabela chamada pessoas.
sql
Copiar código
CREATE TABLE pessoas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    idade INT NOT NULL
);
Script PHP para Buscar Dados:
php
Copiar código
<?php
$servername = "localhost";
$username = "usuario";
$password = "senha";
$dbname = "meu_banco";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Conexão falhou: " . $conn->connect_error);
}

$sql = "SELECT id, nome, idade FROM pessoas";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    echo '<div class="table-container" style="max-height: 200px; overflow-y: auto; border: 1px solid #ddd; margin-bottom: 20px;">';
    echo '<table id="myTable">';
    echo '<tr><th>ID</th><th>Nome</th><th>Idade</th></tr>';

    while($row = $result->fetch_assoc()) {
        echo '<tr data-info="Informações sobre o item ' . $row["id"] . '.">';
        echo '<td>' . $row["id"] . '</td>';
        echo '<td>' . $row["nome"] . '</td>';
        echo '<td>' . $row["idade"] . '</td>';
        echo '</tr>';
        echo '<tr class="info-row" style="display:none;"><td colspan="3">Mais detalhes sobre ' . $row["nome"] . '.</td></tr>';
    }

    echo '</table></div>';
} else {
    echo "0 resultados";
}
$conn->close();
?>
Integração com JavaScript
O JavaScript que lida com a exibição das linhas adicionais continua o mesmo, você só precisa garantir que o código PHP está em um arquivo que seu HTML possa acessar (ex: dados.php).

Resumo
Exibir informações em outra linha é simples e envolve a manipulação de elementos HTML.
Obter dados de um banco de dados requer um servidor e uma linguagem de programação como PHP, Node.js, etc., para conectar ao banco de dados e renderizar os dados.
Se precisar de mais detalhes ou ajuda com outra parte, é só avisar!



Você disse:
quase isso, seria para que o conteudo apredentado no data-info seja de outra fonte de informações
O ChatGPT disse:
ChatGPT
Se você deseja que o conteúdo apresentado no atributo data-info venha de outra fonte de informações, como um banco de dados ou uma API, você pode fazer isso através de uma chamada assíncrona usando JavaScript. Aqui está uma abordagem usando JavaScript com uma chamada AJAX para buscar os dados de um arquivo PHP.

1. Estrutura HTML
Primeiro, vamos criar a estrutura básica da tabela sem os dados no atributo data-info.

html
Copiar código
<div class="table-container" style="max-height: 200px; overflow-y: auto; border: 1px solid #ddd; margin-bottom: 20px;">
    <table id="myTable">
        <tr>
            <th>ID</th>
            <th>Nome</th>
            <th>Idade</th>
        </tr>
        <tr data-id="1">
            <td>1</td>
            <td>João</td>
            <td>30</td>
        </tr>
        <tr data-id="2">
            <td>2</td>
            <td>Maria</td>
            <td>25</td>
        </tr>
        <tr data-id="3">
            <td>3</td>
            <td>Carlos</td>
            <td>35</td>
        </tr>
    </table>
</div>

<div id="myModal" class="modal" style="display: none; position: fixed; z-index: 1; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); padding-top: 60px;">
    <div class="modal-content" style="background-color: #fefefe; margin: 5% auto; padding: 20px; border: 1px solid #888; width: 80%;">
        <span id="close" style="cursor:pointer; float:right;">&times;</span>
        <p id="modalText"></p>
    </div>
</div>
2. JavaScript para Chamada AJAX
Agora, você pode adicionar um código JavaScript para buscar informações ao clicar na linha da tabela:

javascript
Copiar código
const rows = document.querySelectorAll('#myTable tr[data-id]');
const modal = document.getElementById('myModal');
const modalText = document.getElementById('modalText');
const closeModal = document.getElementById('close');

rows.forEach(row => {
    row.addEventListener('click', () => {
        const id = row.getAttribute('data-id');

        // Fazer uma chamada AJAX para buscar informações
        fetch(`getInfo.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                modalText.textContent = data.info; // Supondo que a resposta tenha um campo "info"
                modal.style.display = 'block';
            })
            .catch(error => console.error('Erro ao buscar dados:', error));
    });
});

closeModal.onclick = () => {
    modal.style.display = 'none';
};

window.onclick = (event) => {
    if (event.target === modal) {
        modal.style.display = 'none';
    }
};
3. Script PHP para Retornar Dados
Agora, crie um arquivo PHP (getInfo.php) que busca as informações de um banco de dados com base no ID:

php
Copiar código
<?php
$servername = "localhost";
$username = "usuario";
$password = "senha";
$dbname = "meu_banco";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Conexão falhou: " . $conn->connect_error);
}

$id = intval($_GET['id']); // Obter o ID da consulta
$sql = "SELECT info FROM informacoes WHERE id = $id"; // Ajuste a consulta conforme necessário
$result = $conn->query($sql);

$response = [];
if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    $response['info'] = $row['info']; // Campo que você deseja retornar
} else {
    $response['info'] = "Nenhuma informação encontrada.";
}

$conn->close();
echo json_encode($response); // Retorna a resposta em JSON
?>
Resumo
Estrutura HTML: A tabela contém linhas com IDs, mas não contém informações diretamente.
JavaScript: Ao clicar em uma linha, o JavaScript faz uma chamada AJAX para um arquivo PHP, passando o ID correspondente.
PHP: O PHP busca a informação no banco de dados e retorna como JSON.
Com essa abordagem, você pode facilmente atualizar ou modificar o conteúdo que é apresentado ao clicar nas linhas da tabela, permitindo uma personalização mais dinâmica. Se precisar de mais ajustes ou explicações, é só avisar!